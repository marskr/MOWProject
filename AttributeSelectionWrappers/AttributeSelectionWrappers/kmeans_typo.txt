below described some kmeans implementations in R language, for further implementation ease.

*******************************KMEANS*******************************

1) kmeans from R base stats package:

kmeans(x, centers, iter.max = 10, nstart = 1,
       algorithm = c("Hartigan-Wong", "Lloyd", "Forgy", "MacQueen"), trace=FALSE)

## S3 method for class 'kmeans'
fitted(object, method = c("centers", "classes"), ...)

ARGUMENTS:

x - numeric matrix of data, or an object that can be coerced to such a matrix (such as a numeric vector or
	a data frame with all numeric columns).

centers - either the number of clusters, say k, or a set of initial (distinct) cluster centres. If a number,
	      a random set of (distinct) rows in x is chosen as the initial centres.

iter.max - the maximum number of iterations allowed.

nstart - if centers is a number, how many random sets should be chosen?

algorithm - character: may be abbreviated. Note that "Lloyd" and "Forgy" are alternative names for one algorithm.

object - an R object of class "kmeans", typically the result ob of ob <- kmeans(..).
 
method - character: may be abbreviated. "centers" causes fitted to return cluster centers (one for each input 
		 point) and "classes" causes fitted to return a vector of class assignments.

trace - logical or integer number, currently only used in the default method ("Hartigan-Wong"): if positive 
		(or true), tracing information on the progress of the algorithm is produced. Higher values may produce 
		more tracing information.

--------------------------------------------------------------------------

As a result of an algorithm calculations we obtain:

cluster - A vector of integers (from 1:k) indicating the cluster to which each point is allocated.

centers - A matrix of cluster centres.

totss - The total sum of squares.

withinss - Vector of within-cluster sum of squares, one component per cluster.

tot.withinss - Total within-cluster sum of squares, i.e. sum(withinss).

betweenss - The between-cluster sum of squares, i.e. totss-tot.withinss.

size - The number of points in each cluster.

iter - The number of (outer) iterations.

ifault - integer: indicator of a possible algorithm problem – for experts.

--------------------------------------------------------------------------

2) kmeans from microsoft machine learning server

rxKmeans(formula, data, 
           outFile = NULL, outColName = ".rxCluster", 
           writeModelVars = FALSE, extraVarsToWrite = NULL,
           overwrite = FALSE, numClusters = NULL, centers = NULL, 
           algorithm = "Lloyd", numStartRows = 0, maxIterations = 1000, 
           numStarts = 1, rowSelection = NULL, 
           transforms = NULL, transformObjects = NULL,
           transformFunc = NULL, transformVars = NULL, 
           transformPackages = NULL, transformEnvir = NULL,
           blocksPerRead = rxGetOption("blocksPerRead"),
           reportProgress = rxGetOption("reportProgress"), verbose = 0,
           computeContext = rxGetOption("computeContext"),
           xdfCompressionLevel = rxGetOption("xdfCompressionLevel"), ...)

 ## S3 method for class `rxKmeans':
print  (x, header = TRUE, ...)

ARGUMENTS:

formula - 

data - a data source object, a character string specifying a .xdf file, or a data frame object. 

outFile - either an RxXdfData data source object or a character string specifying the .xdf file 
		  for storing the resulting cluster indexes. If NULL, then no cluster indexes are stored to disk.

outColName = ".rxCluster" - character string to be used as a column name for the resulting cluster indexes
							if outFile is not NULL.

writeModelVars = FALSE - logical value. If TRUE, and the output file is different from the input file, 
					     variables in the model will be written to the output file in addition to the cluster
						 numbers. If variables from the input data set are transformed in the model, the 
						 transformed variables will also be written out. 

extraVarsToWrite = NULL - NULL or character vector of additional variables names from the input data to 
						  include in the outFile. If writeModelVars is TRUE, model variables will be included 
						  as well.
           
overwrite = FALSE - logical value. If TRUE, an existing outFile with an existing column named outColName will
					be overwritten. 

numClusters = NULL - number of clusters k to create. If NULL, then the centersargument must be specified.

centers = NULL - a k x p numeric matrix containing a set of initial (distinct) cluster centers. If NULL, 
				 then the numClusters argument must be specified. 
           
algorithm = "Lloyd" - character string defining algorithm to use in defining the clusters. Currently 
					  supported algorithms are "Lloyd". This argument is case insensitive. 

numStartRows = 0 - integer specifying the size of the sample used to choose initial centers. If 0, 
				   (the default), the size is chosen as the minimum of the number of observations or 10 times 
				   the number of clusters. 

maxIterations = 1000 - maximum number of iterations allowed.
           
numStarts = 1 - if centers is NULL, k rows are randomly selected from the data source for use as initial 
				starting points. The numStarts argument defines the number of these random sets that are to 
				be chosen and evaluated, and the best result is returned. If numStarts is 0, the first k rows 
				in the data set are used. Random selection of rows is only supported for .xdf data sources 
				using the native file system and data frames. If the .xdf file is compressed, the random sample 
				is taken from a maximum of the first 5000 rows of data.

rowSelection = NULL - name of a logical variable in the data set (in quotes) or a logical expression using 
					  variables in the data set to specify row selection.

transforms = NULL - an expression of the form list(name = expression, ...) representing the first round of 
					variable transformations. As with all expressions, transforms (or rowSelection) can be 
					defined outside of the function call using the expression function.

transformObjects = NULL - a named list containing objects that can be referenced by transforms, transformsFunc,
						  and rowSelection. 
           
transformFunc = NULL - variable transformation function. See rxTransform for details.

transformVars = NULL - character vector of input data set variables needed for the transformation function. 
					   See rxTransform for details.

transformPackages = NULL - character vector defining additional R packages (outside of those specified in 
						   rxGetOption("transformPackages")) to be made available and preloaded for use in variable 
						   transformation functions, e.g., those explicitly defined in RevoScaleR functions via their 
						   transforms and transformFunc arguments or those defined implicitly via their formula or 
						   rowSelection arguments. The transformPackages argument may also be NULL, indicating that 
						   no packages outside rxGetOption("transformPackages") will be preloaded.  

transformEnvir = NULL - user-defined environment to serve as a parent to all environments developed internally and 
						used for variable data transformation. If transformEnvir = NULL, a new "hash" environment with 
						parent baseenv() is used instead.
           
blocksPerRead = rxGetOption("blocksPerRead") - number of blocks to read for each chunk of data read from the data source.
           
reportProgress = rxGetOption("reportProgress") -  integer value with options:

												    0: no progress is reported.
													1: the number of processed rows is printed and updated.
													2: rows processed and timings are reported.
													3: rows processed and all timings are reported. 

verbose = 0 - integer value. If 0, no additional output is printed. If 1, additional summary information is printed. 
           
computeContext = rxGetOption("computeContext") - a valid RxComputeContext. The RxSpark and RxHadoopMR compute contexts 
												 distribute the computation among the nodes specified by the compute 
												 context; for other compute contexts, the computation is distributed if 
												 possible on the local computer.
           
xdfCompressionLevel = rxGetOption("xdfCompressionLevel") - integer in the range of -1 to 9 indicating the compression
														   level for the output data if written to an .xdf file. The 
														   higher the value, the greater the amount of compression - 
														   resulting in smaller files but a longer time to create them. 
														   If xdfCompressionLevel is set to 0, there will be no 
														   compression and files will be compatible with the 6.0 
														   release of Revolution R Enterprise. If set to -1, a default
														   level of compression will be used. 

... - additional arguments to be passed directly to the Revolution Compute Engine.

x - object of class rxKmeans.

header - logical value. If TRUE, header information is printed.	

--------------------------------------------------------------------------

As a result of an algorithm calculations we obtain:

cluster - A vector of integers indicating the cluster to which each point is allocated. This information 
		  is always returned if the data source is a data frame. If the data source is not a data frame and 
		  outFile is specified. i.e., not NULL, the the cluster indexes are written/appended to the specified 
		  file with a column name as defined by outColName.

centers - matrix of cluster centers.

withinss - within-cluster sum of squares (relative to the center) for each cluster.

totss - total within-cluster sum of squares.

tot.withinss - sum of the withinss vector.

betweenss - between-cluster sum of squares.

size - number of points in each cluster.

valid.obs - number of valid observations.

missing.obs - number of missing observations.

numIterations - number iterations performed.

params - parameters sent to Microsoft R Services Compute Engine.

formula - formula as described in rxFormula.

call - the matched call.

--------------------------------------------------------------------------
